name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.js
            **/*.html
            **/*.css
            **/*.md
            **/*.json

      - name: Setup Node.js
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate JavaScript files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Validating JavaScript files..."
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.js ]]; then
              echo "Checking $file..."
              node -c "$file" && echo "✅ $file is valid" || echo "❌ $file has syntax errors"
            fi
          done

      - name: Check file sizes
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Checking file sizes..."
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ -f "$file" ]]; then
              size=$(wc -c < "$file")
              if [[ $size -gt 1000000 ]]; then
                echo "⚠️ $file is large (${size} bytes)"
              else
                echo "✅ $file size OK (${size} bytes)"
              fi
            fi
          done

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Pull Request Validation')
            );
            
            const reviewComment = `## ✅ Pull Request Validation
            
            Your pull request has been automatically validated.
            
            ### Validation Summary
            - ✅ File syntax validation completed
            - ✅ File size check completed
            - ✅ Change detection completed
            
            ### Changed Files
            ${{ steps.changed-files.outputs.all_changed_files }}
            
            For detailed results, check the [workflow logs](${context.payload.repository.html_url}/actions/runs/${context.runId}).
            
            ---
            *Automated validation*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: reviewComment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: reviewComment
              });
            }